service: topic-service
variablesResolutionMode: 20210326
package:
  version: '0.0.1-SNAPSHOT'
  artifact: ./application/target/${self:service}-${self:package.version}-${self:provider.name}.jar
  excludeDevDependencies: true
provider:
  name: aws
  runtime: java11
  region: us-east-1
  memorySize: 1024
  timeout: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
  environment:
    APPLICATION_ENVIRONMENT: ${opt:stage}
    CLOUD_REGION: US_East_1
functions:
  createTopic:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: topic/create
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/create.json)}
                name: CreateTopicModel
                description: 'create topic model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: createFunction
  updateTopic:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: topic/update
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/update.json)}
                name: UpdateTopicModel
                description: 'update topic model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: updateFunction
  disableTopic:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: topic/disable
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/disable.json)}
                name: DisableTopicModel
                description: 'disable topic model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: disableFunction
  getTopic:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: topic/get
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/get.json)}
                name: GetTopicModel
                description: 'get topic model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getFunction
  getAllTopics:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: topic/getAll
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/getAll.json)}
                name: GetAllTopicsModel
                description: 'get all topics model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getAllFunction

resources:
  extensions:
    CreateTopicLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    UpdateTopicLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    DisableTopicLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    GetTopicLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    GetAllTopicsLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
  Resources:
    topicsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}Topic
        AttributeDefinitions:
          - AttributeName: code
            AttributeType: S
        KeySchema:
          - AttributeName: code
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1